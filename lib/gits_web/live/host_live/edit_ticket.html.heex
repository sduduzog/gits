<div class="flex items-center">
  <div class="grow">
    <h2 class="text-lg/7 font-semibold text-gray-900">
      {if @form.action == :add_ticket_type, do: "Add ticket", else: "Edit ticket"}
    </h2>
    <p class="mb-4 mt-1 text-sm/5 text-gray-600"></p>
  </div>
</div>
<.form
  :let={f}
  id="add_ticket_form"
  for={@form}
  class="grow"
  phx-submit="submit"
  phx-change="validate"
>
  <div class="grid max-w-screen-sm grid-cols-2 gap-4">
    <.inputs_for :let={tf} field={f[:type]}>
      <.input
        type="color"
        class="col-span-full max-w-40"
        field={tf[:color]}
        value={tf[:color].value || Gits.RandomColor.generate()}
        label="Color"
      />

      <.input type="text" field={tf[:name]} label="Name" />

      <.input type="number" field={tf[:price]} label="Price" hint="0 or from 50 and above" />
      <.input type="number" field={tf[:quantity]} label="Quantity" />
      <.input type="number" field={tf[:limit_per_user]} label="Limit per user" />

      <.input field={tf[:sale_starts_at]} label="Sale starts" type="datetime-local" />

      <.input field={tf[:sale_ends_at]} label="Sale ends" type="datetime-local" />

      <.input type="textarea" field={tf[:description]} label="Description" class="col-span-full" />
      <.input
        type="checkbox"
        field={tf[:check_in_enabled]}
        label="Enable Check-in"
        hint="RSVP"
        description="Ticket holders will be required to sign in. This also allows admitting attendees without scanning their ticket"
        class="col-span-full"
      />
    </.inputs_for>
  </div>
  <div class="col-span-full flex gap-6 py-4 pb-8">
    <.button disabled={not @form.changed? or not @form.valid?}>
      <span class="text-sm font-semibold capitalize">
        Save
      </span>
    </.button>
    <.button
      type="button"
      variant={:ghost}
      phx-click={
        JS.patch(
          Routes.host_edit_event_path(
            @socket,
            :tickets,
            @host.handle,
            @event.public_id
          ),
          replace: true
        )
      }
    >
      <span class="text-sm font-semibold">
        Back
      </span>
    </.button>
    <div role="none" class="grow"></div>
    <.button
      :if={@archive_ticket_form}
      phx-click={show_modal("archive_ticket")}
      variant={:outline}
    >
      <span class="text-sm font-semibold text-red-500">
        Archive
      </span>
      <.icon name="i-lucide-trash" class="text-red-500" />
    </.button>
  </div>
</.form>

<.modal :if={@archive_ticket_form} id="archive_ticket">
  <div class="grid gap-4">
    <h3 class="text-lg/4 font-semibold">Archive Ticket</h3>
    <div class="text-sm text-zinc-500 space-y-2">
      <p>
        You are about to archive this ticket. Archiving will remove it from the event.
      </p>
      <p>Are you sure you want to archive this ticket?</p>
    </div>
    <.form
      :let={f}
      id="archive_ticket_form"
      for={@archive_ticket_form}
      class="grid grow grid-cols-2 gap-6"
      phx-submit={JS.push("archive_ticket") |> hide_modal("archive_ticket")}
    >
      <.inputs_for field={f[:type]}></.inputs_for>
      <div class="col-span-full flex justify-end">
        <.button>
          <span class="text-sm font-semibold">
            Yes, Archive
          </span>
        </.button>
      </div>
    </.form>
  </div>
</.modal>
