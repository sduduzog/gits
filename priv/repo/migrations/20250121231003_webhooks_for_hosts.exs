defmodule Gits.Repo.Migrations.WebhooksForHosts do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:webhooks_versions, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :version_action_type, :text, null: false
      add :version_source_id, :uuid, null: false
      add :changes, :map

      add :version_inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :version_updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:webhooks, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:webhooks_versions) do
      modify :version_source_id,
             references(:webhooks,
               column: :id,
               name: "webhooks_versions_version_source_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:webhooks) do
      add :url, :text, null: false
      add :triggers, {:array, :text}
      add :details, :text

      add :created_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :host_id,
          references(:hosts,
            column: :id,
            name: "webhooks_host_id_fkey",
            type: :uuid,
            prefix: "public"
          )

      add :archived_at, :utc_datetime_usec
    end

    create table(:webhook_events, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :status, :text

      add :created_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :webhook_id,
          references(:webhooks,
            column: :id,
            name: "webhook_events_webhook_id_fkey",
            type: :uuid,
            prefix: "public"
          )

      add :archived_at, :utc_datetime_usec
    end
  end

  def down do
    drop constraint(:webhook_events, "webhook_events_webhook_id_fkey")

    drop table(:webhook_events)

    drop constraint(:webhooks, "webhooks_host_id_fkey")

    alter table(:webhooks) do
      remove :archived_at
      remove :host_id
      remove :updated_at
      remove :created_at
      remove :details
      remove :triggers
      remove :url
    end

    drop constraint(:webhooks_versions, "webhooks_versions_version_source_id_fkey")

    alter table(:webhooks_versions) do
      modify :version_source_id, :uuid
    end

    drop table(:webhooks)

    drop table(:webhooks_versions)
  end
end
