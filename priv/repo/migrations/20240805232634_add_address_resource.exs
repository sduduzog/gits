defmodule Gits.Repo.Migrations.AddAddressResource do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    alter table(:events) do
      remove :venue_id

      add :address_id,
          references(:venues,
            column: :id,
            name: "events_address_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end

    create table(:addresses, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :place_id, :text, null: false

      add :created_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :archived_at, :utc_datetime_usec
    end

    create unique_index(:addresses, [:place_id], name: "addresses_unique_place_index")
  end

  def down do
    drop_if_exists unique_index(:addresses, [:place_id], name: "addresses_unique_place_index")

    drop table(:addresses)

    drop constraint(:events, "events_address_id_fkey")

    alter table(:events) do
      remove :address_id

      add :venue_id,
          references(:venues,
            column: :id,
            name: "events_venue_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end
  end
end
